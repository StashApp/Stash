name: Build

on:
  push:
    branches: [ develop, master, github-actions ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Checkout
      run: git fetch --prune --unshallow --tags

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13

    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '12'
    
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ui/v2.5/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # - name: Pre-install
    #   run: make pre-ui

    # - name: Generate
    #   run: make generate
    
    # - name: Validate
    #   run: make ui-validate fmt-check vet it

    # - name: Build UI
    #   run: make ui-only

    # - name: Cross Compile
    #   run: |
    #     docker pull stashapp/compiler:4
    #     ./scripts/cross-compile.sh

    - name: Generate output file
      run: |
        mkdir dist
        echo "test data" > dist/stash-linux
    
    - name: Generate checksums
      run: |
        git describe --tags --exclude latest_develop | tee CHECKSUMS_SHA1
        sha1sum dist/stash-* | sed 's/dist\///g' | tee -a CHECKSUMS_SHA1
        echo "STASH_VERSION=$(git describe --tags --exclude latest_develop)" >> $GITHUB_ENV
        echo "RELEASE_DATE=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_ENV
    
    # - name: Upload Windows binary
    #   # only upload binaries for pull requests
    #   #if: ${{ github.event_name == 'pull_request' && github.base_ref != 'refs/heads/develop' && github.base_ref != 'refs/heads/master'}}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: stash-win.exe
    #     path: dist/stash-win.exe

    # - name: Upload OSX binary
    #   # only upload binaries for pull requests
    #   #if: ${{ github.event_name == 'pull_request' && github.base_ref != 'refs/heads/develop' && github.base_ref != 'refs/heads/master'}}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: stash-osx
    #     path: dist/stash-osx

    - name: Upload Linux binary
      # only upload binaries for pull requests
      #if: ${{ github.event_name == 'pull_request' && github.base_ref != 'refs/heads/develop' && github.base_ref != 'refs/heads/master'}}
      uses: actions/upload-artifact@v2
      with:
        name: stash-linux
        path: dist/stash-linux

    - name: Development Release
      #if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}      
      uses: johnwbyrd/update-release@v1.0.0
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        release: latest_develop
        message: "${{ env.STASH_VERSION }}: Latest development build"
        body: "**${RELEASE_DATE}**\n This is always the latest committed version on the develop branch. Use as your own risk!"
        files: |
          dist/stash-linux
          CHECKSUMS_SHA1

    #- name: Master release
    #if: ${{ github.event_name == 'release' && github.event.action == 'published' && github.ref != 'refs/tags/latest_develop' }}
    #  uses: AButler/upload-release-assets@v2.0
    #  with:
    #    files: 'dist/stash-*'
    #    repo-token: ${{ secrets.GITHUB_TOKEN }}
    
    # TODO - make master release
    # TODO - push docker images
