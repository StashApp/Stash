// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "github.com/stashapp/stash/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// JoinReaderWriter is an autogenerated mock type for the JoinReaderWriter type
type JoinReaderWriter struct {
	mock.Mock
}

// CreateMoviesScenes provides a mock function with given fields: newJoins
func (_m *JoinReaderWriter) CreateMoviesScenes(newJoins []models.MoviesScenes) error {
	ret := _m.Called(newJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func([]models.MoviesScenes) error); ok {
		r0 = rf(newJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreatePerformersScenes provides a mock function with given fields: newJoins
func (_m *JoinReaderWriter) CreatePerformersScenes(newJoins []models.PerformersScenes) error {
	ret := _m.Called(newJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func([]models.PerformersScenes) error); ok {
		r0 = rf(newJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSceneMovies provides a mock function with given fields: sceneID
func (_m *JoinReaderWriter) GetSceneMovies(sceneID int) ([]models.MoviesScenes, error) {
	ret := _m.Called(sceneID)

	var r0 []models.MoviesScenes
	if rf, ok := ret.Get(0).(func(int) []models.MoviesScenes); ok {
		r0 = rf(sceneID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.MoviesScenes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(sceneID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateGalleriesImages provides a mock function with given fields: imageID, updatedJoins
func (_m *JoinReaderWriter) UpdateGalleriesImages(imageID int, updatedJoins []models.GalleriesImages) error {
	ret := _m.Called(imageID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.GalleriesImages) error); ok {
		r0 = rf(imageID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateGalleriesTags provides a mock function with given fields: galleryID, updatedJoins
func (_m *JoinReaderWriter) UpdateGalleriesTags(galleryID int, updatedJoins []models.GalleriesTags) error {
	ret := _m.Called(galleryID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.GalleriesTags) error); ok {
		r0 = rf(galleryID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateImagesTags provides a mock function with given fields: imageID, updatedJoins
func (_m *JoinReaderWriter) UpdateImagesTags(imageID int, updatedJoins []models.ImagesTags) error {
	ret := _m.Called(imageID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.ImagesTags) error); ok {
		r0 = rf(imageID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateMoviesScenes provides a mock function with given fields: sceneID, updatedJoins
func (_m *JoinReaderWriter) UpdateMoviesScenes(sceneID int, updatedJoins []models.MoviesScenes) error {
	ret := _m.Called(sceneID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.MoviesScenes) error); ok {
		r0 = rf(sceneID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatePerformersGalleries provides a mock function with given fields: galleryID, updatedJoins
func (_m *JoinReaderWriter) UpdatePerformersGalleries(galleryID int, updatedJoins []models.PerformersGalleries) error {
	ret := _m.Called(galleryID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.PerformersGalleries) error); ok {
		r0 = rf(galleryID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatePerformersImages provides a mock function with given fields: imageID, updatedJoins
func (_m *JoinReaderWriter) UpdatePerformersImages(imageID int, updatedJoins []models.PerformersImages) error {
	ret := _m.Called(imageID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.PerformersImages) error); ok {
		r0 = rf(imageID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatePerformersScenes provides a mock function with given fields: sceneID, updatedJoins
func (_m *JoinReaderWriter) UpdatePerformersScenes(sceneID int, updatedJoins []models.PerformersScenes) error {
	ret := _m.Called(sceneID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.PerformersScenes) error); ok {
		r0 = rf(sceneID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateSceneMarkersTags provides a mock function with given fields: sceneMarkerID, updatedJoins
func (_m *JoinReaderWriter) UpdateSceneMarkersTags(sceneMarkerID int, updatedJoins []models.SceneMarkersTags) error {
	ret := _m.Called(sceneMarkerID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.SceneMarkersTags) error); ok {
		r0 = rf(sceneMarkerID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateScenesTags provides a mock function with given fields: sceneID, updatedJoins
func (_m *JoinReaderWriter) UpdateScenesTags(sceneID int, updatedJoins []models.ScenesTags) error {
	ret := _m.Called(sceneID, updatedJoins)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []models.ScenesTags) error); ok {
		r0 = rf(sceneID, updatedJoins)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
